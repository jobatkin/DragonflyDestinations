Resources:
  sslSecurityGroupIngress: 
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: {"Fn::GetAtt" : ["AWSEBSecurityGroup", "GroupId"]}
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      CidrIp: 0.0.0.0/0

files:
  /etc/nginx/conf.d/https.conf:
    mode: "000644"
    owner: root
    group: root
    content: |
      # HTTPS server
      server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/pki/tls/certs/server.crt;
        ssl_certificate_key /etc/pki/tls/certs/server.key;

        ssl_session_timeout 5m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_prefer_server_ciphers on;

        location / {
          proxy_pass http://localhost:8080;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto https;
        }
      }

container_commands:
  01_download_cert:
    command: "aws acm get-certificate --certificate-arn arn:aws:acm:ap-southeast-2:216989093846:certificate/350098e3-95b4-4b9d-b053-dda379e436aa --output text --query Certificate > /etc/pki/tls/certs/server.crt"
  02_download_chain:
    command: "aws acm get-certificate --certificate-arn arn:aws:acm:ap-southeast-2:216989093846:certificate/350098e3-95b4-4b9d-b053-dda379e436aa --output text --query CertificateChain >> /etc/pki/tls/certs/server.crt"
  03_download_key:
    command: "aws acm get-certificate --certificate-arn arn:aws:acm:ap-southeast-2:216989093846:certificate/350098e3-95b4-4b9d-b053-dda379e436aa --output text --query PrivateKey > /etc/pki/tls/certs/server.key"
  04_nginx_reload:
    command: "service nginx reload"